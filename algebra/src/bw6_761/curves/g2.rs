use crate::{
    biginteger::{BigInteger384, BigInteger768},
    curves::{
        models::{ModelParameters, SWModelParameters},
        short_weierstrass_jacobian::{GroupAffine, GroupProjective},
    },
    field_new,
    bw6_761::{Fq, Fq3, Fr, FQ_ZERO},
};

pub type G2Affine = GroupAffine<Parameters>;
pub type G2Projective = GroupProjective<Parameters>;

#[derive(Clone, Default, PartialEq, Eq)]
pub struct Parameters;

impl ModelParameters for Parameters {
    type BaseField = Fq3;
    type ScalarField = Fr;
}

impl SWModelParameters for Parameters {
    /// COEFF_A = (0, 0, COEFF_A * TWIST^2) = (0, 0, 0)
    #[rustfmt::skip]
    const COEFF_A: Fq3 = field_new!(Fq3,
        FQ_ZERO,
        FQ_ZERO,
        FQ_ZERO,
    );

    /// COEFF_B = (G1::COEFF_B * TWIST^3, 0, 0) =
    /// (6891450384315732539396789682275657542479668912536150109513790160209623422243491736087683183289411687640864567753786613451161759120554247759349511699125301598951605099378508850372543631423596795951899700429969112842764913119068297,
    /// 0, 0)
    #[rustfmt::skip]
    const COEFF_B: Fq3 = field_new!(Fq3,
        field_new!(Fq, BigInteger768([
            0xf09700000000f4e1,
            0x31e0f1fd5000e6b4,
            0xd8da1c27e5f14e7b,
            0xe3cb185e389ead0e,
            0x98093d6038c28f16,
            0x04bcf9a86e69b578,
            0xb5336f7f6c59b0f9,
            0x29d5d63c5926a711,
            0x5bd5c4ef6f242d49,
            0x2e1d03a2b3af4229,
            0x22378bc8c62fab80,
            35739793387420943,
        ])),
        FQ_ZERO,
        FQ_ZERO,
    );

    /// COFACTOR =
    /// 1265304919959039679429045731145505064626214162696218278186339635411880213703002072758192181904903695535267222899813279994591457744766341202101240277343826035009642377732612514546667231339230039607911075518841949588471928728253539814824331252938899061803869542294480824399283659346699064861555854417628176120468211608830019063076315105279258409936276654821219664019110503676648052586167303260077088788403365316814515809049843752849385934599164148209392403111809383507917790916553705162911845685403598752409936216050817029096576113390377811724154954058427300667203704509231268
    #[rustfmt::skip]
    const COFACTOR: &'static [u64] = &[
        0x2e8980000028f0a4,
        0xcb99f4a0705e7daf,
        0x91ec260fbde0efe1,
        0x31c2036f05e4c062,
        0xcfc322e5215708ae,
        0xe1d0d5d6a5b02b34,
        0x6b9dd299a440efe4,
        0x84e0256757c21608,
        0xffdf5b982c7239c4,
        0xf83b409e2f62a56b,
        0xc06e33744d77410f,
        0x25020ff8364dc1a6,
        0x58bca0d39d03912f,
        0x6d0bc309fc716443,
        0x59c47926fd8bd6ee,
        0x0f72029b80fa580d,
        0x6be1307c95ded1f4,
        0x12f78845bfbf8405,
        0x2385b6610ef20740,
        0xf85864aafbbc6144,
        0xa386df7c35919dea,
        0xbc270bf6d82f5a97,
        0x0101b712e425632c,
        0x46fc9998dc05bc53,
        0x40350576e1833af5,
        0xf907247cb560edb0,
        0x5263ebc7dd3fe2a3,
        0x2cff77c28bd52dd1,
        0x15589f43c9a72693,
        0xdf860bcf4557,
    ];

    /// COFACTOR^(-1) mod r =
    /// 112937678234414496702845765948073391910438646503358353332909432765320599756715256889612098459922997071927390370917
    #[rustfmt::skip]
    const COFACTOR_INV: Fr = field_new!(Fr, BigInteger384([
        1397899299857580394,
        1594338727209173690,
        11546181169281174168,
        6890257935863416812,
        15193349384333610024,
        52973789887542574,
    ]));

    /// AFFINE_GENERATOR_COEFFS = (G2_GENERATOR_X, G2_GENERATOR_Y)
    const AFFINE_GENERATOR_COEFFS: (Self::BaseField, Self::BaseField) =
        (G2_GENERATOR_X, G2_GENERATOR_Y);
}

const G2_GENERATOR_X: Fq3 =
    field_new!(Fq3, G2_GENERATOR_X_C0, G2_GENERATOR_X_C1, G2_GENERATOR_X_C2);
const G2_GENERATOR_Y: Fq3 =
    field_new!(Fq3, G2_GENERATOR_Y_C0, G2_GENERATOR_Y_C1, G2_GENERATOR_Y_C2);

/// G2_GENERATOR_X_C0 =
/// 0
#[rustfmt::skip]
pub const G2_GENERATOR_X_C0: Fq = FQ_ZERO;

/// G2_GENERATOR_X_C1 =
/// 0
#[rustfmt::skip]
pub const G2_GENERATOR_X_C1: Fq = FQ_ZERO;

/// G2_GENERATOR_X_C2 =
/// 6135921300398963229459987286695699217545204666529861370704079879201833731436572328599524146229998574754292135229057697306783390195509955813319814327535873655767479707744632204564038887043130720220362200532657412192601983745255835
#[rustfmt::skip]
pub const G2_GENERATOR_X_C2: Fq = field_new!(Fq, BigInteger768([
    0xfa25f94beeebecdf,
    0x8477082ebc8d6791,
    0x993b02a9715b7a7a,
    0x81bbc4bc38d835c1,
    0xe3ede96f053a0af6,
    0xcd592a4cf7b22cd7,
    0x132ffc971f799ba6,
    0x83e9231f10f02371,
    0xcb18025e0c9033dc,
    0xe42ae65be2472814,
    0x3bd10a864a3e54b7,
    0xe5bf2d9a771d57,
]));

/// G2_GENERATOR_Y_C0 =
/// 6789479719527334834648754930847984284105714089135790916196687638158887283533506870440623977726085375261028017198709990358443742747040720507293290368868201133748490819035644935427524209827654040712612754352539141529257563707448384
#[rustfmt::skip]
pub const G2_GENERATOR_Y_C0: Fq = field_new!(Fq, BigInteger768([
    0xde5ebd5f035a2dc5,
    0xf7258b2c8361f18c,
    0xaf512aa92223a764,
    0x279d52cd45d204fd,
    0x196a522daf7bc859,
    0x93057a5dd7818fc9,
    0xb0a1895d51c56f24,
    0x805e944c53668d92,
    0x76e976ccb0a1cb0f,
    0x36e03d5e704f85f1,
    0xe1e3df96d23feb0e,
    0x1156414691d0976,
]));

/// G2_GENERATOR_Y_C1 =
/// 0
#[rustfmt::skip]
pub const G2_GENERATOR_Y_C1: Fq = FQ_ZERO;

/// G2_GENERATOR_Y_C2 =
/// 0
#[rustfmt::skip]
pub const G2_GENERATOR_Y_C2: Fq = FQ_ZERO;
